name: C/C++ CI

on: [push, pull_request]

jobs:
  build-linux:
    name: Linux build

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y libkrb5-dev

    - name: CMake configure
      run: |
        cmake -S . -B build
  
    - name: Build (Linux)
      run: cmake --build build

  build-windows:
    name: Windows build

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: CMake configure
      run: |
        cmake -G "Visual Studio 17 2022" .
    - name: Build (MSVC)
      run: |
        cmake --build .

  build-ps2:
    name: PS2 build

    runs-on: ubuntu-latest
    container: ps2dev/ps2dev:latest
    steps:
    - name: Install dependencies
      run: |
        apk add cmake build-base git zip gawk python3 py3-pip bash

    - name: git checkout
      uses: actions/checkout@v4

    - name: Compile PS2 EE Side
      run: |
        make -f Makefile.platform ps2_ee_all clean
     
    - name: Compile PS2 EE RPC Side
      run: |
        make -f Makefile.platform ps2_rpc_all clean
     
    - name: Compile PS2 IOP Side
      run: |
        make -f Makefile.platform ps2_iop_all clean

    - name: Compile PS2 IRX Side
      run: |
        make -f Makefile.platform ps2_irx_all clean

  build-vita:
    name: VITA build

    runs-on: ubuntu-latest
    container: vitasdk/vitasdk:latest
    steps:
    - name: git checkout
      uses: actions/checkout@v4

    - name: Compile VITA
      run: |
        make -f Makefile.platform vita_all clean  

  build-ps3-ppu:
    name: PS3 PPU build

    runs-on: ubuntu-20.04
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Set env vars
      id: slug
      run: |
        echo "sha_name=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_ENV
      # using pre-compiled sdk
    - name: Download PSL1GHT Toolchain
      run: |
        curl -sL https://github.com/bucanero/ps3toolchain/releases/download/ubuntu-latest-fad3b5fb/ps3dev-ubuntu-latest-2020-08-31.tar.gz | tar xvz -C ./
        echo "PS3DEV=${GITHUB_WORKSPACE}/ps3dev" >> $GITHUB_ENV
        echo "PSL1GHT=${GITHUB_WORKSPACE}/ps3dev" >> $GITHUB_ENV
    - name: build libsmb2
      run: |
        cd lib
        make -f Makefile.PS3_PPU clean
        make -f Makefile.PS3_PPU
    
  build-ps4:
    name: PS4
      
    runs-on: ubuntu-24.04
    steps:
    - name: git checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Create Build Environment
      run: |
        sudo apt-get update && \
        sudo apt-get install -y pacman-package-manager wget cmake git gettext smpq && \
        sudo tee -a /etc/pacman.conf > /dev/null <<TEXT
        [pacbrew]
        SigLevel = Optional TrustAll
        Server = https://pacman.mydedibox.fr/pacbrew/packages/
        TEXT

    - name: Setup pacman packages
      run: |
        sudo pacman --noconfirm -Sy && sudo pacman --noconfirm -S ps4-openorbis ps4-openorbis-portlibs        

    - name: build libsmb2
      run: |
        make -f Makefile.platform ps4_all clean

  build-switch:
    name: SWITCH build

    runs-on: ubuntu-latest
    container: devkitpro/devkita64:latest
    steps:
    - name: Install dependencies
      run: |
        sudo apt update -y && sudo apt upgrade -y && sudo apt install -y gettext smpq

    - name: git checkout
      uses: actions/checkout@v4

    - name: Compile Nintendo Switch
      run: |
        make -f Makefile.platform switch_all clean

  build-3ds:
    name: 3DS build

    runs-on: ubuntu-latest
    container: devkitpro/devkitarm:latest
    steps:
    - name: Install dependencies
      run: |
        sudo apt update -y && sudo apt upgrade -y && sudo apt install -y ffmpeg gettext smpq

    - name: git checkout
      uses: actions/checkout@v4

    - name: Compile Nintendo 3DS
      run: |
        make -f Makefile.platform 3ds_all clean

  build-wii:
    name: WII build

    runs-on: ubuntu-latest
    container: devkitpro/devkitppc:latest
    steps:
    - name: Install dependencies
      run: |
        sudo apt update -y && sudo apt upgrade -y && sudo apt install -y ffmpeg gettext smpq

    - name: git checkout
      uses: actions/checkout@v4

    - name: Compile Nintendo WII
      run: |
        make -f Makefile.platform wii_all clean

  build-gc:
    name: GameCube build

    runs-on: ubuntu-latest
    container: devkitpro/devkitppc:latest
    steps:
    - name: Install dependencies
      run: |
        sudo apt update -y && sudo apt upgrade -y && sudo apt install -y ffmpeg gettext smpq

    - name: git checkout
      uses: actions/checkout@v4

    - name: Compile Nintendo Gamecube
      run: |
        make -f Makefile.platform gc_all clean

  build-wiiu:
    name: WII-U Build

    runs-on: ubuntu-latest
    container: devkitpro/devkitppc:latest
    steps:
    - name: Install dependencies
      run: |
        sudo apt update -y && sudo apt upgrade -y && sudo apt install -y ffmpeg gettext smpq

    - name: git checkout
      uses: actions/checkout@v4

    - name: Compile WII-U
      run: |
        make -f Makefile.platform wiiu_all clean

  build-ds:
    name: DS build

    runs-on: ubuntu-latest
    container: devkitpro/devkitarm:latest
    steps:
    - name: Install dependencies
      run: |
        sudo apt update -y && sudo apt upgrade -y && sudo apt install -y ffmpeg gettext smpq

    - name: git checkout
      uses: actions/checkout@v4

    - name: Compile NDS ARM9
      run: |
        make -f Makefile.platform nds_all clean

  build-Amiga-OS3:
    name: Amiga OS3 build

    runs-on: ubuntu-latest
    container: amigadev/crosstools:m68k-amigaos
    steps:
    - name: Install dependencies
      run: |
        sudo apt update -y && sudo apt upgrade -y && sudo apt install -y ffmpeg gettext smpq

    - name: git checkout
      uses: actions/checkout@v4

    - name: Compile AMIGA OS3
      run: |
        cd lib
        make -f Makefile.AMIGA_OS3 clean
        make -f Makefile.AMIGA_OS3

  build-Amiga-Os:
    name: Amiga OS Build

    runs-on: ubuntu-latest
    container: amigadev/crosstools:ppc-amigaos
    steps:
    - name: Install dependencies
      run: |
        sudo apt update -y && sudo apt upgrade -y && sudo apt install -y ffmpeg gettext smpq

    - name: git checkout
      uses: actions/checkout@v4

    - name: Compile AMIGA OS
      run: |
        cd lib
        make -f Makefile.AMIGA clean
        make -f Makefile.AMIGA
      
